<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text_array[0] = "";
show = false;
current_line = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (show) {
    var num_lines = array_length_1d(text_array);
    if (current_line &lt; num_lines) {
    //for (var i = array_length_1d(text_array) - 1; i &gt;= 0; --i;) {
        text = text_array[current_line];
        horMiddle = view_xview[0] + (view_wview[0] / 2);
        vertMiddle = view_yview[0] + (view_hview[0] / 2);
        draw_set_color(c_black);
        //draw_set_font(font_dialogue);
        textWidth = string_width(text);
        textHeight = string_height(text);
        draw_rectangle(x, y, x + textWidth, y + textHeight, false);
        //draw_rectangle(horMiddle -  (textWidth / 2), vertMiddle - (textHeight / 2), horMiddle + (textWidth / 2), vertMiddle + (textHeight / 2), false);
        draw_set_color(c_white);
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_text(x + textWidth / 2, y + textHeight / 2, text);
        //draw_text(horMiddle,vertMiddle,text);
        //i = num_lines;
        if (keyboard_check_pressed(vk_enter)) {
            current_line += 1;
        }
    } else {
        current_line = 0;
        show = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
